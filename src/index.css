@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark theme with neon accents */
    --background: 220 13% 4%;
    --foreground: 0 0% 95%;

    --card: 220 13% 6%;
    --card-foreground: 0 0% 95%;

    --popover: 220 13% 6%;
    --popover-foreground: 0 0% 95%;

    --primary: 190 100% 50%; /* Electric Blue */
    --primary-foreground: 220 13% 4%;

    --secondary: 271 76% 53%; /* Neon Purple */
    --secondary-foreground: 0 0% 95%;

    --muted: 220 13% 10%;
    --muted-foreground: 0 0% 60%;

    --accent: 327 100% 50%; /* Cyber Pink */
    --accent-foreground: 0 0% 95%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 95%;

    --border: 220 13% 15%;
    --input: 220 13% 8%;
    --ring: 190 100% 50%;

    --radius: 0.75rem;

    /* Neon glow colors */
    --neon-blue: 190 100% 50%;
    --neon-purple: 271 76% 53%;
    --neon-pink: 327 100% 50%;
    --neon-cyan: 180 100% 50%;
    
    /* Gradients */
    --gradient-neon: linear-gradient(135deg, hsl(var(--neon-blue)), hsl(var(--neon-purple)));
    --gradient-cyber: linear-gradient(135deg, hsl(var(--neon-purple)), hsl(var(--neon-pink)));
    --gradient-electric: linear-gradient(135deg, hsl(var(--neon-cyan)), hsl(var(--neon-blue)));
    
    /* Shadows and glows */
    --glow-blue: 0 0 20px hsl(var(--neon-blue) / 0.5);
    --glow-purple: 0 0 20px hsl(var(--neon-purple) / 0.5);
    --glow-pink: 0 0 20px hsl(var(--neon-pink) / 0.5);
    --glow-strong: 0 0 30px hsl(var(--neon-blue) / 0.8);

    --radius: 0.75rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    /* Dark theme already applied as default */
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', sans-serif;
    scroll-behavior: smooth;
  }
}

@layer components {
  /* Neon glow effects */
  .neon-glow {
    @apply shadow-[var(--glow-blue)];
  }
  
  .neon-glow-purple {
    @apply shadow-[var(--glow-purple)];
  }
  
  .neon-glow-pink {
    @apply shadow-[var(--glow-pink)];
  }
  
  .neon-glow-strong {
    @apply shadow-[var(--glow-strong)];
  }

  /* Gradient backgrounds */
  .gradient-neon {
    background: var(--gradient-neon);
  }
  
  .gradient-cyber {
    background: var(--gradient-cyber);
  }
  
  .gradient-electric {
    background: var(--gradient-electric);
  }

  /* Typing animation */
  .typing-animation::after {
    content: '|';
    animation: blink 1s infinite;
  }
  
  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Pulse glow animation */
  .pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite alternate;
  }
  
  @keyframes pulse-glow {
    from {
      box-shadow: var(--glow-blue);
    }
    to {
      box-shadow: var(--glow-strong);
    }
  }

  /* Floating animation */
  .float {
    animation: float 3s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  /* Card hover effects */
  .card-hover {
    transition: all 0.3s ease;
  }
  
  .card-hover:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: var(--glow-strong);
  }

  /* Neon border animation */
  .neon-border {
    position: relative;
    background: transparent;
  }
  
  .neon-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: var(--gradient-neon);
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }
}